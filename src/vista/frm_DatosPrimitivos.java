/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package vista;

import controlador.ControladorDatos;
import controlador.tda.lista.ListaEnlazadaServices;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import vista.ModeloTabla.ModeloTablaDatos;

/**
 *
 * @author Gigabyte
 */
public class frm_DatosPrimitivos<E> extends javax.swing.JDialog {
    
    private ControladorDatos c = new ControladorDatos();
    private ModeloTablaDatos mt = new ModeloTablaDatos();

    /**
     * Creates new form frm_DatosPrimitivos
     */
    public frm_DatosPrimitivos(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        
        initComponents();
        
        limpiar();
        
    }
    
    public void limpiar() {
        txtDatoIng.setText("1");
        txtSizeArray.setText("1");
        txtSizeList.setText("0");
        c.setDatos(null);
        CargarTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtDatoIng = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDP = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txtSizeArray = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        cbxTipoDato = new javax.swing.JComboBox<>();
        btnIngresar = new javax.swing.JButton();
        btnCrearArreglo = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        txtSizeList = new javax.swing.JTextField();
        btnGuardarListaEnlazada = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        btnCrearListdeJava = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtMensajeConsola = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(null);

        jPanel1.setLayout(null);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Ingreso de Datos"));
        jPanel2.setLayout(null);

        jLabel1.setText("Dato:");
        jPanel2.add(jLabel1);
        jLabel1.setBounds(20, 20, 50, 20);
        jPanel2.add(txtDatoIng);
        txtDatoIng.setBounds(20, 40, 130, 30);

        jPanel1.add(jPanel2);
        jPanel2.setBounds(10, 90, 170, 90);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Resumen de Datos"));

        tblDP.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblDP);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 780, Short.MAX_VALUE)
                .addGap(14, 14, 14))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel3);
        jPanel3.setBounds(10, 230, 810, 330);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Creacion de Arreglos"));
        jPanel4.setLayout(null);

        jLabel3.setText("Tamaño:");
        jPanel4.add(jLabel3);
        jLabel3.setBounds(10, 20, 60, 20);
        jPanel4.add(txtSizeArray);
        txtSizeArray.setBounds(20, 40, 130, 30);

        jPanel1.add(jPanel4);
        jPanel4.setBounds(190, 90, 200, 90);

        jLabel2.setText("Tipo de Dato");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(20, 50, 90, 30);

        cbxTipoDato.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "byte", "short", "int", "float", "double", "boolean", "String", "long", "char" }));
        jPanel1.add(cbxTipoDato);
        cbxTipoDato.setBounds(110, 50, 140, 30);

        btnIngresar.setText("Crear Dato");
        btnIngresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIngresarActionPerformed(evt);
            }
        });
        jPanel1.add(btnIngresar);
        btnIngresar.setBounds(20, 190, 150, 30);

        btnCrearArreglo.setText("Crear Arreglo");
        btnCrearArreglo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearArregloActionPerformed(evt);
            }
        });
        jPanel1.add(btnCrearArreglo);
        btnCrearArreglo.setBounds(220, 190, 140, 30);

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Creacion de Objetos Lista"));
        jPanel5.setLayout(null);

        jLabel4.setText("Tamaño:");
        jPanel5.add(jLabel4);
        jLabel4.setBounds(10, 20, 60, 16);
        jPanel5.add(txtSizeList);
        txtSizeList.setBounds(100, 40, 124, 30);

        jPanel1.add(jPanel5);
        jPanel5.setBounds(410, 90, 330, 90);

        btnGuardarListaEnlazada.setText("Crear ListaEnlazada");
        btnGuardarListaEnlazada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarListaEnlazadaActionPerformed(evt);
            }
        });
        jPanel1.add(btnGuardarListaEnlazada);
        btnGuardarListaEnlazada.setBounds(440, 190, 150, 30);

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setText("Medida de Memoria de Datos y Objetos");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(270, 10, 280, 20);

        btnCrearListdeJava.setText("Crear List de Java");
        btnCrearListdeJava.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearListdeJavaActionPerformed(evt);
            }
        });
        jPanel1.add(btnCrearListdeJava);
        btnCrearListdeJava.setBounds(610, 190, 170, 30);

        txtMensajeConsola.setColumns(20);
        txtMensajeConsola.setRows(5);
        jScrollPane2.setViewportView(txtMensajeConsola);

        jPanel1.add(jScrollPane2);
        jScrollPane2.setBounds(10, 570, 800, 60);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 0, 830, 640);

        setSize(new java.awt.Dimension(845, 679));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnIngresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIngresarActionPerformed
        // TODO add your handling code here:
        guardar();
    }//GEN-LAST:event_btnIngresarActionPerformed

    private void btnCrearArregloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearArregloActionPerformed
        // TODO add your handling code here:
        guardarArreglo();
    }//GEN-LAST:event_btnCrearArregloActionPerformed

    private void btnGuardarListaEnlazadaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarListaEnlazadaActionPerformed
        // TODO add your handling code here:
        guardarListaEnlazada();
    }//GEN-LAST:event_btnGuardarListaEnlazadaActionPerformed

    private void btnCrearListdeJavaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearListdeJavaActionPerformed
        // TODO add your handling code here:
        guardarListDeJava();
    }//GEN-LAST:event_btnCrearListdeJavaActionPerformed
    
    public void CargarTabla() {
        mt.setLista(c.getListaDatos().getLista());
        tblDP.setModel(mt);
        tblDP.updateUI();
        
    }
    
    public String cadena() {
        String trim = "";
        if (!txtDatoIng.getText().trim().isEmpty()) {
            trim = txtDatoIng.getText().trim();
        }
        return trim;
        
    }
    
    public void guardar() {
        
        switch (cbxTipoDato.getSelectedIndex()) {
            case 0:
                    try {
                if (!txtDatoIng.getText().trim().isEmpty()) {
                    c.guardarDatoByte(Byte.parseByte(txtDatoIng.getText().trim()));
                } else {
                    JOptionPane.showMessageDialog(null, "Se debe inicializar el dato. Dato se inicializará en 1", "Advertencia", JOptionPane.INFORMATION_MESSAGE);
                    
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Ingrese un dato valido", "Advertencia", JOptionPane.INFORMATION_MESSAGE);
//                limpiar();
            }
            
            break;
            case 1:
                    try {
                if (!txtDatoIng.getText().trim().isEmpty()) {
                    c.guardarDatoShort(Short.parseShort(txtDatoIng.getText().trim()));
                } else {
                    
                    JOptionPane.showMessageDialog(null, "Se debe inicializar el dato. Dato se inicializará en 1", "Advertencia", JOptionPane.INFORMATION_MESSAGE);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Ingrese un dato valido", "Advertencia", JOptionPane.INFORMATION_MESSAGE);
            }
            
            break;
            case 2:
                    try {
                if (!txtDatoIng.getText().trim().isEmpty()) {
                    c.guardarDatoInt(Integer.parseInt(txtDatoIng.getText().trim()));
                } else {
                    
                    JOptionPane.showMessageDialog(null, "Se debe inicializar el dato. Dato se inicializará en 1", "Advertencia", JOptionPane.INFORMATION_MESSAGE);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Ingrese un dato valido", "Advertencia", JOptionPane.INFORMATION_MESSAGE);
            }
            
            break;
            case 3:
                    try {
                if (!txtDatoIng.getText().trim().isEmpty()) {
                    c.guardarDatofloat(Float.parseFloat(txtDatoIng.getText().trim()));
                } else {
                    
                    JOptionPane.showMessageDialog(null, "Se debe inicializar el dato. Dato se inicializará en 1", "Advertencia", JOptionPane.INFORMATION_MESSAGE);
                }
                
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Ingrese un dato valido", "Advertencia", JOptionPane.INFORMATION_MESSAGE);
            }
            
            break;
            case 4:
                    try {
                if (!txtDatoIng.getText().trim().isEmpty()) {
                    c.guardarDatoDouble(Double.parseDouble(txtDatoIng.getText().trim()));
                } else {
                    
                    JOptionPane.showMessageDialog(null, "Se debe inicializar el dato. Dato se inicializará en 1", "Advertencia", JOptionPane.INFORMATION_MESSAGE);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Ingrese un dato valido", "Advertencia", JOptionPane.INFORMATION_MESSAGE);
            }
            
            break;
            case 5:
                    try {
                if (!txtDatoIng.getText().trim().isEmpty()) {
                    c.guardarDatoBoolean(Boolean.parseBoolean(txtDatoIng.getText().trim()));
                    
                } else {
                    
                    JOptionPane.showMessageDialog(null, "Se debe inicializar el dato. Dato se inicializará en 1", "Advertencia", JOptionPane.INFORMATION_MESSAGE);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Ingrese un dato valido", "Advertencia", JOptionPane.INFORMATION_MESSAGE);
            }
            
            break;
            case 6:
                c.guardarDatoString(cadena());
                break;
            case 7:
              try {
                if (!txtDatoIng.getText().trim().isEmpty()) {
                    c.guardarDatoLong(Long.parseLong(txtDatoIng.getText().trim()));
                } else {
                    
                    JOptionPane.showMessageDialog(null, "Se debe inicializar el dato. Dato se inicializará en 1", "Advertencia", JOptionPane.INFORMATION_MESSAGE);
                    
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Ingrese un dato valido", "Advertencia", JOptionPane.INFORMATION_MESSAGE);
            }
            
            break;
            case 8:
                
                try {
                if (!txtDatoIng.getText().trim().isEmpty()) {
                    c.guardarDatoChar(txtDatoIng.getText().trim().charAt(WIDTH));
                } else {
                    JOptionPane.showMessageDialog(null, "Ingrese un dato valido", "Advertencia", JOptionPane.INFORMATION_MESSAGE);
                    
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Datos de tipo char van entre '" + " '", "Consejo", JOptionPane.INFORMATION_MESSAGE);
            }
            
            break;
            
        }
        limpiar();
    }
    
    public void guardarArreglo() {
        
        switch (cbxTipoDato.getSelectedIndex()) {
            case 0:
                
                c.guardarDatoArregloByte(arregloByte(), cbxTipoDato.getSelectedItem().toString());
                
                break;
            case 1:
                c.guardarDatoArregloShort(arregloShort(), cbxTipoDato.getSelectedItem().toString());
                break;
            case 2:
                c.guardarDatoArregloInt(arregloInt(), cbxTipoDato.getSelectedItem().toString());
                break;
            case 3:
                c.guardarDatoArreglofloat(arregloFloat(), cbxTipoDato.getSelectedItem().toString());
                break;
            case 4:
                c.guardarDatoArregloDouble(arregloDouble(), cbxTipoDato.getSelectedItem().toString());
                break;
            case 5:
                c.guardarDatoArregloBoolean(arregloBoolean(), cbxTipoDato.getSelectedItem().toString());
                break;
            case 6:
                c.guardarDatoArregloString(arregloString(), cbxTipoDato.getSelectedItem().toString());
                break;
            case 7:
                c.guardarDatoArregloLong(arregloLong(), cbxTipoDato.getSelectedItem().toString());
                break;
            case 8:
                c.guardarDatoArregloChar(arregloChar(), cbxTipoDato.getSelectedItem().toString());
                break;
            
        }
        limpiar();
    }
    
    public void guardarListaEnlazada() {
        ListaEnlazadaServices<E> listado = crearListaEnlazada();
        c.guardarListaEnlazada(listado, cbxTipoDato.getSelectedItem().toString());
        txtMensajeConsola.setText(String.valueOf(c.mensajeListaEnlazada(listado, cbxTipoDato.getSelectedItem().toString())));
        
    }

    public void guardarListDeJava() {
        List lista = crearListaJava();
        
        c.guardarListadeJava(lista);
        txtMensajeConsola.setText(String.valueOf(c.mensajeList(lista)));
    }
//byte, short, int, float, double, boolean, String, long, char

    public byte[] arregloByte() {
        int size = Integer.parseInt(txtSizeArray.getText().trim());
        byte[] arreglo;
        
        if (txtSizeArray.getText().trim().isEmpty()) {
            arreglo = new byte[1];
        } else {
            arreglo = new byte[size];
            for (int i = 0; i < arreglo.length; i++) {
                byte dato = Byte.parseByte(JOptionPane.showInputDialog("Dato en la posicion [" + (i + 1) + "]"));
                arreglo[i] = dato;
            }
        }
        return arreglo;
    }
    
    public short[] arregloShort() {
        int size = Integer.parseInt(txtSizeArray.getText().trim());
        short[] arreglo;
        
        if (txtSizeArray.getText().trim().isEmpty()) {
            
            arreglo = new short[1];
        } else {
            arreglo = new short[size];
            for (int i = 0; i < arreglo.length; i++) {
                short dato = Short.parseShort(JOptionPane.showInputDialog("Dato en la posicion [" + (i + 1) + "]"));
                arreglo[i] = dato;
            }
        }
        return arreglo;
    }
    
    public int[] arregloInt() {
        int size = Integer.parseInt(txtSizeArray.getText().trim());
        int[] arreglo;
        
        if (txtSizeArray.getText().trim().isEmpty()) {
            arreglo = new int[1];
        } else {
            arreglo = new int[size];
            for (int i = 0; i < arreglo.length; i++) {
                int dato = Integer.parseInt(JOptionPane.showInputDialog("Dato en la posicion [" + (i + 1) + "]"));
                arreglo[i] = dato;
            }
        }
        return arreglo;
    }
    
    public float[] arregloFloat() {
        int size = Integer.parseInt(txtSizeArray.getText().trim());
        float[] arreglo;
        
        if (txtSizeArray.getText().trim().isEmpty()) {
            arreglo = new float[1];
        } else {
            arreglo = new float[size];
            for (int i = 0; i < arreglo.length; i++) {
                float dato = Float.parseFloat(JOptionPane.showInputDialog("Dato en la posicion [" + (i + 1) + "]"));
                arreglo[i] = dato;
            }
        }
        return arreglo;
    }
    
    public double[] arregloDouble() {
        int size = Integer.parseInt(txtSizeArray.getText().trim());
        double[] arreglo;
        
        if (txtSizeArray.getText().trim().isEmpty()) {
            arreglo = new double[1];
        } else {
            arreglo = new double[size];
            for (int i = 0; i < arreglo.length; i++) {
                double dato = Double.parseDouble(JOptionPane.showInputDialog("Dato en la posicion [" + (i + 1) + "]"));
                arreglo[i] = dato;
            }
        }
        return arreglo;
    }
    
    public String[] arregloString() {
        int size = Integer.parseInt(txtSizeArray.getText().trim());
        String[] arreglo;
        
        if (txtSizeArray.getText().trim().isEmpty()) {
            arreglo = new String[1];
        } else {
            arreglo = new String[size];
            
            for (int i = 0; i < arreglo.length; i++) {
                String dato = JOptionPane.showInputDialog("Dato en la posicion [" + (i + 1) + "]");
                arreglo[i] = dato;
            }
        }
        return arreglo;
    }
    
    public boolean[] arregloBoolean() {
        int size = Integer.parseInt(txtSizeArray.getText().trim());
        boolean[] arreglo;
        
        if (txtSizeArray.getText().trim().isEmpty()) {
            arreglo = new boolean[1];
        } else {
            arreglo = new boolean[size];
            boolean dato = true;
            
            for (int i = 0; i < arreglo.length; i++) {
                if (dato == true) {
                    
                    arreglo[i] = dato;
                    dato = false;
                } else if (dato == false) {
                    arreglo[i] = dato;
                    dato = true;
                }
                
            }
        }
        return arreglo;
    }
    
    public long[] arregloLong() {
        int size = Integer.parseInt(txtSizeArray.getText().trim());
        long[] arreglo;
        
        if (txtSizeArray.getText().trim().isEmpty()) {
            arreglo = new long[1];
        } else {
            arreglo = new long[size];
            for (int i = 0; i < arreglo.length; i++) {
                long dato = Long.parseLong(JOptionPane.showInputDialog("Dato en la posicion [" + (i + 1) + "]"));
                arreglo[i] = dato;
            }
        }
        return arreglo;
    }
    
    public char[] arregloChar() {
        int size = Integer.parseInt(txtSizeArray.getText().trim());
        char[] arreglo;
        
        if (txtSizeArray.getText().trim().isEmpty()) {
            arreglo = new char[1];
        } else {
            arreglo = new char[size];
            for (int i = 0; i < arreglo.length; i++) {
                char dato = JOptionPane.showInputDialog("Dato en la posicion [" + (i + 1) + "]").charAt(i);
                arreglo[i] = dato;
            }
        }
        return arreglo;
    }
//    Crear lista Enlazada

    public ListaEnlazadaServices<E> crearListaEnlazada() {
        
        int size = Integer.parseInt(txtSizeList.getText().trim());
        
        ListaEnlazadaServices<E> lista;
        E dato = null;
        
        if (!txtSizeList.getText().trim().isEmpty()) {
            lista = new ListaEnlazadaServices<>(size);
            
            for (int i = 0; i < size; i++) {
                dato = (E) JOptionPane.showInputDialog("Dato [" + (i + 1) + "]");
                lista.insertar(dato, i);
            }
            
        } else {
            size = 0;
            lista = new ListaEnlazadaServices<>(size);
        }

        return lista;
    }
    
    public List crearListaJava() {
        int size = Integer.parseInt(txtSizeList.getText().trim());
        List listaJava;
        if (txtSizeList.getText().trim().isEmpty()) {
            listaJava = new ArrayList();
        } else {
            listaJava = new ArrayList(size);
            for (int i = 0; i < size; i++) {
                Object dato = JOptionPane.showInputDialog("Dato [" + (i + 1) + "]");
                listaJava.add(dato);
            }
        }
        return listaJava;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frm_DatosPrimitivos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frm_DatosPrimitivos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frm_DatosPrimitivos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frm_DatosPrimitivos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                frm_DatosPrimitivos dialog = new frm_DatosPrimitivos(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCrearArreglo;
    private javax.swing.JButton btnCrearListdeJava;
    private javax.swing.JButton btnGuardarListaEnlazada;
    private javax.swing.JButton btnIngresar;
    private javax.swing.JComboBox<String> cbxTipoDato;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblDP;
    private javax.swing.JTextField txtDatoIng;
    private javax.swing.JTextArea txtMensajeConsola;
    private javax.swing.JTextField txtSizeArray;
    private javax.swing.JTextField txtSizeList;
    // End of variables declaration//GEN-END:variables
}
