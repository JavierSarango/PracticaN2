/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package vista;

import controlador.ControladorDatos;
import java.awt.Color;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import vista.ModeloTabla.ModeloTablaDatos;

/**
 *
 * @author Gigabyte
 */
public class frm_DatosPrimitivos extends javax.swing.JDialog {

    private ControladorDatos c = new ControladorDatos();
    private ModeloTablaDatos mt = new ModeloTablaDatos();

    /**
     * Creates new form frm_DatosPrimitivos
     */
    public frm_DatosPrimitivos(java.awt.Frame parent, boolean modal) {
        super(parent, modal);

        initComponents();

        limpiar();

    }

    public void limpiar() {
        txtDatoIng.setText("");
        txtTamanioArreglo.setText("1");        
        c.setDatos(null);
        CargarTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtDatoIng = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDP = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txtTamanioArreglo = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        cbxTipoDato = new javax.swing.JComboBox<>();
        btnIngresar = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(null);

        jPanel1.setLayout(null);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Ingreso de Datos"));
        jPanel2.setLayout(null);

        jLabel1.setText("Dato:");
        jPanel2.add(jLabel1);
        jLabel1.setBounds(10, 30, 50, 20);
        jPanel2.add(txtDatoIng);
        txtDatoIng.setBounds(70, 30, 120, 30);

        jPanel1.add(jPanel2);
        jPanel2.setBounds(10, 10, 210, 80);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Resumen de Datos"));

        tblDP.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblDP);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 710, Short.MAX_VALUE)
                .addGap(14, 14, 14))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(11, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel3);
        jPanel3.setBounds(10, 150, 740, 310);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Creacion de Arreglos"));
        jPanel4.setLayout(null);

        jLabel3.setText("Tama√±o:");
        jPanel4.add(jLabel3);
        jLabel3.setBounds(10, 26, 60, 30);
        jPanel4.add(txtTamanioArreglo);
        txtTamanioArreglo.setBounds(90, 30, 110, 30);

        jPanel1.add(jPanel4);
        jPanel4.setBounds(230, 10, 210, 80);

        jLabel2.setText("Tipo de Dato");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(457, 20, 90, 30);

        cbxTipoDato.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "byte", "short", "int", "float", "double", "boolean", "String", "long", "char" }));
        jPanel1.add(cbxTipoDato);
        cbxTipoDato.setBounds(570, 20, 140, 30);

        btnIngresar.setText("Ingresar");
        btnIngresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIngresarActionPerformed(evt);
            }
        });
        jPanel1.add(btnIngresar);
        btnIngresar.setBounds(30, 100, 130, 30);

        jButton1.setText("Crear");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(280, 100, 90, 30);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 0, 761, 460);

        setSize(new java.awt.Dimension(777, 513));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnIngresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIngresarActionPerformed
        // TODO add your handling code here:
        guardar();
    }//GEN-LAST:event_btnIngresarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        guardarArreglo();
    }//GEN-LAST:event_jButton1ActionPerformed

    public void CargarTabla() {
        mt.setLista(c.getListaDatos().getLista());
        tblDP.setModel(mt);
        tblDP.updateUI();

    }

    public String cadena() {
        String trim = "";
        if (!txtDatoIng.getText().trim().isEmpty()) {
            trim = txtDatoIng.getText().trim();
        }
        return trim;

    }

    public void guardar() {

        switch (cbxTipoDato.getSelectedIndex()) {
            case 0:
                c.guardarDatoByte(Byte.parseByte(txtDatoIng.getText().trim()));
                break;
            case 1:
                c.guardarDatoShort(Short.parseShort(txtDatoIng.getText().trim()));
                break;
            case 2:
                c.guardarDatoInt(Integer.parseInt(txtDatoIng.getText().trim()));
                break;
            case 3:
                c.guardarDatofloat(Float.parseFloat(txtDatoIng.getText().trim()));
                break;
            case 4:
                c.guardarDatoDouble(Double.parseDouble(txtDatoIng.getText().trim()));
                break;
            case 5:
                c.guardarDatoBoolean(Boolean.parseBoolean(txtDatoIng.getText().trim()));
                break;
            case 6:
                c.guardarDatoString(cadena());
                break;
            case 7:
                c.guardarDatoLong(Long.parseLong(txtDatoIng.getText().trim()));
                break;
            case 8:
                c.guardarDatoChar(txtDatoIng.getText().trim().charAt(WIDTH));
                break;

        }
        limpiar();
    }

    public void guardarArreglo() {

        switch (cbxTipoDato.getSelectedIndex()) {
            case 0:

                c.guardarDatoArregloByte(arregloByte(), cbxTipoDato.getSelectedItem().toString());
                break;
            case 1:
                c.guardarDatoArregloShort(arregloShort(), cbxTipoDato.getSelectedItem().toString());
                break;
            case 2:
                c.guardarDatoArregloInt(arregloInt(), cbxTipoDato.getSelectedItem().toString());
                break;
            case 3:
                c.guardarDatoArreglofloat(arregloFloat(), cbxTipoDato.getSelectedItem().toString());
                break;
            case 4:
                c.guardarDatoArregloDouble(arregloDouble(), cbxTipoDato.getSelectedItem().toString());
                break;
            case 5:
                c.guardarDatoArregloBoolean(arregloBoolean(), cbxTipoDato.getSelectedItem().toString());
                break;
            case 6:
                c.guardarDatoArregloString(arregloString(), cbxTipoDato.getSelectedItem().toString());
                break;
            case 7:
                c.guardarDatoArregloLong(arregloLong(), cbxTipoDato.getSelectedItem().toString());
                break;
            case 8:
                c.guardarDatoArregloChar(arregloChar(), cbxTipoDato.getSelectedItem().toString());
                break;

        }
        limpiar();
    }

//byte, short, int, float, double, boolean, String, long, char
    public byte[] arregloByte() {
        int size = Integer.parseInt(txtTamanioArreglo.getText().trim());
        byte[] arreglo;

        if (txtTamanioArreglo.getText().trim().isEmpty()) {
            arreglo = new byte[1];
        } else {
            arreglo = new byte[size];
            for (int i = 0; i < arreglo.length; i++) {
                byte dato = Byte.parseByte(JOptionPane.showInputDialog("Dato en la posicion [" + (i + 1) + "]"));
                arreglo[i] = dato;
            }
        }
        return arreglo;
    }

    public short[] arregloShort() {
        int size = Integer.parseInt(txtTamanioArreglo.getText().trim());
        short[] arreglo;

        if (txtTamanioArreglo.getText().trim().isEmpty()) {
            arreglo = new short[1];
        } else {
            arreglo = new short[size];
            for (int i = 0; i < arreglo.length; i++) {
                short dato = Short.parseShort(JOptionPane.showInputDialog("Dato en la posicion [" + (i + 1) + "]"));
                arreglo[i] = dato;
            }
        }
        return arreglo;
    }

    public int[] arregloInt() {
        int size = Integer.parseInt(txtTamanioArreglo.getText().trim());
        int[] arreglo;

        if (txtTamanioArreglo.getText().trim().isEmpty()) {
            arreglo = new int[1];
        } else {
            arreglo = new int[size];
            for (int i = 0; i < arreglo.length; i++) {
                int dato = Integer.parseInt(JOptionPane.showInputDialog("Dato en la posicion [" + (i + 1) + "]"));
                arreglo[i] = dato;
            }
        }
        return arreglo;
    }

    public float[] arregloFloat() {
        int size = Integer.parseInt(txtTamanioArreglo.getText().trim());
        float[] arreglo;

        if (txtTamanioArreglo.getText().trim().isEmpty()) {
            arreglo = new float[1];
        } else {
            arreglo = new float[size];
            for (int i = 0; i < arreglo.length; i++) {
                float dato = Float.parseFloat(JOptionPane.showInputDialog("Dato en la posicion [" + (i + 1) + "]"));
                arreglo[i] = dato;
            }
        }
        return arreglo;
    }

    public double[] arregloDouble() {
        int size = Integer.parseInt(txtTamanioArreglo.getText().trim());
        double[] arreglo;

        if (txtTamanioArreglo.getText().trim().isEmpty()) {
            arreglo = new double[1];
        } else {
            arreglo = new double[size];
            for (int i = 0; i < arreglo.length; i++) {
                double dato = Double.parseDouble(JOptionPane.showInputDialog("Dato en la posicion [" + (i + 1) + "]"));
                arreglo[i] = dato;
            }
        }
        return arreglo;
    }

    public String[] arregloString() {
        int size = Integer.parseInt(txtTamanioArreglo.getText().trim());
        String[] arreglo;

        if (txtTamanioArreglo.getText().trim().isEmpty()) {
            arreglo = new String[1];
        } else {
            arreglo = new String[size];

            for (int i = 0; i < arreglo.length; i++) {
                String dato = JOptionPane.showInputDialog("Dato en la posicion [" + (i + 1) + "]");
                arreglo[i] = dato;
            }
        }
        return arreglo;
    }

    public boolean[] arregloBoolean() {
        int size = Integer.parseInt(txtTamanioArreglo.getText().trim());
        boolean[] arreglo;

        if (txtTamanioArreglo.getText().trim().isEmpty()) {
            arreglo = new boolean[1];
        } else {
            arreglo = new boolean[size];
            boolean dato = true;

            for (int i = 0; i < arreglo.length; i++) {
                if (dato == true) {

                    arreglo[i] = dato;
                    dato = false;
                } else if (dato == false) {
                    arreglo[i] = dato;
                    dato = true;
                }

            }
        }
        return arreglo;
    }

    public long[] arregloLong() {
        int size = Integer.parseInt(txtTamanioArreglo.getText().trim());
        long[] arreglo;

        if (txtTamanioArreglo.getText().trim().isEmpty()) {
            arreglo = new long[1];
        } else {
            arreglo = new long[size];
            for (int i = 0; i < arreglo.length; i++) {
                long dato = Long.parseLong(JOptionPane.showInputDialog("Dato en la posicion [" + i + 1 + "]"));
                arreglo[i] = dato;
            }
        }
        return arreglo;
    }

    public char[] arregloChar() {
        int size = Integer.parseInt(txtTamanioArreglo.getText().trim());
        char[] arreglo;

        if (txtTamanioArreglo.getText().trim().isEmpty()) {
            arreglo = new char[1];
        } else {
            arreglo = new char[size];
            for (int i = 0; i < arreglo.length; i++) {
                char dato = JOptionPane.showInputDialog("Dato en la posicion [" + i + 1 + "]").charAt(i);
                arreglo[i] = dato;
            }
        }
        return arreglo;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frm_DatosPrimitivos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frm_DatosPrimitivos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frm_DatosPrimitivos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frm_DatosPrimitivos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                frm_DatosPrimitivos dialog = new frm_DatosPrimitivos(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnIngresar;
    private javax.swing.JComboBox<String> cbxTipoDato;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblDP;
    private javax.swing.JTextField txtDatoIng;
    private javax.swing.JTextField txtTamanioArreglo;
    // End of variables declaration//GEN-END:variables
}
